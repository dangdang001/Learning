class Solution:

# Solution 1: Brute Force: Time: O(n^3) Space: O(1)
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        if len(s)==0:
            return ""
        if len(s)==1:
            return s[0]
        max_len=1
        max_string=s[0]
        for i in range(len(s)-1):
            for j in range(i+1,len(s)):
                substring=s[i:j+1]
                n=j-i+1
                for k in range(n//2+1):
                    if substring[k]!=substring[n-k-1]:
                        break
                if k==n//2 and n>max_len:
                    max_string=substring
                    max_len=n
        return max_string
                
          
