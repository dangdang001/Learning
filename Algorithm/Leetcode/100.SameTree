# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# Solution: Recursive(compared with 101.symmetric tree problem) Time:o(n) 
class Solution:
    def isSameTree(self, p, q):
        """
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """
        if p==None and q==None:
            return True
        elif p==None or q==None:
            return False
        elif p.val==q.val:
            return self.isSameTree(p.left, q.left) and self.isSameTree(p.right,q.right)
        else:
            return False
            
 # Solution(simplified): Recursive(compared with 101.symmetric tree problem) Time:o(n)        
 
    def isSameTree(self, p, q):
        """
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """
        if not p and not q:
            return True
        if not p or not q:
            return False
        return (p.val==q.val) and self.isSameTree(p.left,q.left) and self.isSameTree(p.right,q.right)
