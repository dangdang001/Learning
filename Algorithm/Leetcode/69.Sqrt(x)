
# 1. Newton-Ralphson Method:
class Solution:
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        x1=0.01
        xn=float('inf')
        while (xn**2-x>=0.01):
            xn=x1-(x1**2-x)/(2*x1)
            x1=xn
        return int(xn)

2. Binary Search
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        if x==0 or x==1:
            return x
        left,right=0,x
        while left<=right:
            mid=(left+right)//2
            if x<mid**2:
                right=mid-1
            else:
                if x<(mid+1)**2:
                    return mid
                left=mid+1
