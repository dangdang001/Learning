class Solution:

# Solution 1: Math, Time: O(m+n), Space: O(1)
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        from math import factorial
        return factorial(m+n-2)//(factorial(m-1)*factorial(n-1))
        

# Solution 2: DP, Time: O(mn), Space: O(mn)
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        D=[[0 for j in range(n)] for i in range(m)]
        for i in range(m):
            D[i][0]=1
        for j in range(n):
            D[0][j]=1
        for i in range(1,m):
            for j in range(1,n):
                D[i][j]=D[i-1][j]+D[i][j-1]
        return D[m-1][n-1]        
