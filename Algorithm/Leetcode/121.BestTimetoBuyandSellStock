class Solution:
#Solution 1: Time:O(n^2) Space: O(1)
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        max_diff=0
        for i in range(len(prices)-1):
            for j in range(i+1,len(prices)):
                diff=prices[j]-prices[i]
                max_diff=max(max_diff,diff)
        return max_diff
        
 #Solution 2: Time:O(n) Space: O(1)
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        min_price,max_profit=float("inf"),0
        for price in prices:
            if price<min_price:
                min_price=price
            elif price-min_price>max_profit:
                max_profit=price-min_price
        return max_profit
        
  #Solution 2(Simplified): Time:O(n) Space: O(1)               
      def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        min_price,max_profit=float("inf"),0
        for price in prices:
            min_price=min(min_price,price)
            max_profit=max(max_profit,price-min_price)
        return max_profit
