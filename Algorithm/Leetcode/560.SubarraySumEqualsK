class Solution:
    Solution 1: Brute force: Time: >O(n^2), Space: O(n)
    def subarraySum(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        lookup={}
        for i in range(len(nums)):
            if nums[i] in lookup:
                lookup[nums[i]]+=1
            else:
                lookup[nums[i]]=1
               
        for i in range(len(nums)-1):
            for j in range(i+1,len(nums)):
                temp=sum(nums[i:j+1])
                if temp in lookup:
                    lookup[temp]+=1
                else:
                    lookup[temp]=1
        if k in lookup:
            return lookup[k]
        else:
            return 0
