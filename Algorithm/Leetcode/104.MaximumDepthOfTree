# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# Solution 1: Recursive 
class Solution:
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root==None:
            return 0
        if root.left==None and root.right==None:
            return 1
        elif root.left==None:
            return 1+self.maxDepth(root.right)
        elif root.right==None:
            return 1+self.maxDepth(root.left)
        else:
            return max(1+self.maxDepth(root.right),1+self.maxDepth(root.left))
            
# Solution 1: Recursive(simplified)        
class Solution:
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root==None:
            return 0
        return max(self.maxDepth(root.left),self.maxDepth(root.right))+1
