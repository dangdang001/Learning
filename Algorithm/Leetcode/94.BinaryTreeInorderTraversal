# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:

# Solution 1 : Recursive, Time: O(n), Space: O(n) 
    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        res=[]
        self.helper(root,res)
        return res
    def helper(self, root, res):
        if root:
            self.helper(root.left,res)
            res.append(root.val)
            self.helper(root.right,res)


# Solution 2 : Iterative, Time: O(n), Space: O(n) 

    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        res,stack=[],[]
        while True:
            while root:
                stack.append(root)
                root=root.left
            if not stack:
                return res
            root=stack.pop()
            res.append(root.val)
            root=root.right
            
