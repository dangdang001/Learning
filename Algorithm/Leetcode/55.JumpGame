class Solution:

# Solution 1: DP, Time: O(n^2), Space: O(n)
    def canJump(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        n=len(nums)
        D=[False]*n
        D[n-1]=True
        for i in range(n-2,-1,-1):
            k=1
            while k<=min(nums[i],n-1-i):
                D[i] = D[i] or D[i+k]
                if D[i]==True:
                    break
                k+=1
        return D[0]
            
