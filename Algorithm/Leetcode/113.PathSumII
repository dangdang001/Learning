# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        if not root:
            return []
        result=[]
        self.helper(root,sum,[root.val],result)
        return result
    def helper(self,root,sum,path,result):
        if root:
            if root.val==sum and not root.left and not root.right:
                result.append(path)
            else:
                if root.left:
                    self.helper(root.left,sum-root.val,path+[root.left.val],result)
                if root.right:
                    self.helper(root.right,sum-root.val,path+[root.right.val],result)
            
