# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

Solution 1: Iterative. Time: O(n), Space: O(1)
class Solution:
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        pre=None
        cur=head
        while cur:
            temp=cur.next
            cur.next=pre
            pre=cur
            cur=temp
        return pre
 
 Solution 2: Recursive. Time: O(n), Space: O(1)
 class Solution:
    def reverseList(self, head,pre=None):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if not head:
            return pre
        next=head.next
        head.next=pre
        return self.reverseList(next,head)
