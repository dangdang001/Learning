# Time:  O(n)
# Space: O(h)

# Find the sum of all left leaves in a given binary tree.
#
# Example:
#
#     3
#   / \
#   9  20
#     /  \
#   15   7
#
# There are two left leaves in the binary tree,
# with values 9 and 15 respectively. Return 24.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sumOfLeftLeaves(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if not root:
            return 0
        ans=0
        if root.left:
            # if left node is leaf node, add its value; else treat it as new root
            if not root.left.left and not root.left.right:
                ans+=root.left.val
            else:
                ans+=self.sumOfLeftLeaves(root.left)
        # treat the right node as new root
        ans+=self.sumOfLeftLeaves(root.right)      
        return ans
        
