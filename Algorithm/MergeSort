# merge sort

def merge(nums,l,mid,r):
    left=nums[l:mid+1]
    right=nums[mid+1:r+1]
    n=r-l+1
    i,j,k=0,0,l
    while i<len(left) and j<len(right):
        if left[i]<right[j]:
            nums[k]=left[i]
            i+=1
        else:
            nums[k]=right[j]
            j+=1
        k+=1
    while i<len(left):
        nums[k]=left[i]
        i+=1
        k+=1
    while j<len(right):
        nums[k]=right[j]
        j+=1
        k+=1
        
def merge_sort(nums,l,r):
    if l<r:
        mid=(l+r)//2
        merge_sort(nums,l,mid)
        merge_sort(nums,mid+1,r)
        merge(nums,l,mid,r)
    return nums

# Driver code to test above 
nums = [3, 7, 5, 4, 1, 2, 6] 
n=len(nums)

print(merge_sort(nums,0,n-1))
