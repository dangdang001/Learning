Time: O(m+n), Space: O(m)


class Solution:
    def wordSubsets(self, A, B):
        """
        :type A: List[str]
        :type B: List[str]
        :rtype: List[str]
        """
        def count(s):
            ans=[0]*26
            for letter in s:
                ans[ord(letter)-ord('a')]+=1
            return ans
        
        b_ans=[0]*26
        result=[]
        
        for b in B:
            ans=count(b)
            for i in range(26):
                b_ans[i]=max(b_ans[i],ans[i])
        
        for a in A:
            a_ans=count(a)
            flag=True
            for i in range(26):
                if a_ans[i]<b_ans[i]:
                    flag=False
            if flag: result.append(a)
        return result
            
        
